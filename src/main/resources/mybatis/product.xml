<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.mvc.product.ProductDAOInter">
  <insert id="create" parameterType="ProductVO">
    INSERT INTO product(productno,
                      prodcateno, adminno, prod_title, prod_content, prod_good, thumbs,
                      files, sizes, prod_cnt, replyprod_cnt, prod_rdate, 
                      prod_word, prod_price,
                      prod_grpno, 
                      prod_indent, prod_ansnum, ip, prod_maker)  
    VALUES((SELECT NVL(MAX(productno), 0) + 1 as productno FROM product),
                #{prodcateno}, #{adminno}, #{prod_title}, #{prod_content}, #{prod_good}, #{thumbs}, 
                #{files}, #{sizes}, #{prod_cnt}, #{replyprod_cnt}, sysdate,
                #{prod_word}, #{prod_price},
                (SELECT NVL(MAX(prod_grpno), 0) + 1 as prod_grpno FROM product),
                0, 0, #{ip}, #{prod_maker})
  </insert>
  
  <insert id="Prodest_create" parameterType="ProdestVO">
    INSERT INTO prodest(prodestno, productno, customerno)
    VALUES(#{prodestno}, #{productno}, #{customerno});
  </insert>
  
  <select id="Prodest_join" resultType="Prodest_totalVO">
    SELECT e.prodestno, e.productno, e.customerno, pc.prodcate_title, p.prod_title
    FROM prodest e, product p, prodcate pc, customer c
    WHERE e.customerno = #{customerno} AND c.customerno = e.customerno
               AND e.productno = p.productno AND p.prodcateno = pc.prodcateno;
  </select>
  
  <select id="get_created_no" resultType="int">
    select NVL(MAX(productno), 0) productno FROM product
  </select>
  
  <select id="list_all_prodcate" resultType="ProductVO">
    SELECT productno,
              prodcateno, adminno, prod_title, prod_content, prod_good, thumbs, files, sizes, prod_cnt, replyprod_cnt, prod_rdate, 
              prod_grpno, prod_indent, prod_ansnum, prod_word
    FROM product
    ORDER BY prod_grpno DESC, prod_ansnum ASC
  </select>

  <select id="total_count" resultType="int" > 
    SELECT COUNT(*) as count
    FROM product
  </select>

  <!-- 카테고리별 목록 -->
  <select id="list_by_prodcateno" resultType="ProductVO" parameterType="int">
    SELECT productno,
              prodcateno, adminno, prod_title, prod_content, prod_good, thumbs, files, sizes, prod_cnt, replyprod_cnt, prod_rdate, 
              prod_grpno, prod_indent, prod_ansnum, prod_word
    FROM product
    WHERE prodcateno=#{prodcateno}
    ORDER BY prod_grpno DESC, prod_ansnum ASC
  </select>

  <select id="read" resultType="ProductVO" parameterType="int">
    SELECT productno,
              prodcateno, adminno, prod_title, prod_content, prod_good, thumbs, files, sizes, prod_cnt, replyprod_cnt, prod_rdate, 
              prod_grpno, prod_indent, prod_ansnum, prod_word, ip, prod_maker
    FROM product
    WHERE productno=#{productno}
  </select>
  
  <!-- Join 조회 -->
   <select id="read_by_join" resultType="Prodcate_ProductVO" parameterType="int">
     SELECT c.prodcateno, c.prodcate_title,
               t.productno, t.prodcateno, t.prod_title,
               t.prod_visible, t.prod_cnt, t.prod_rdate, t.prod_price
     FROM prodcate c, product t
     WHERE (t.productno = #{productno}) AND (c.prodcateno = t.prodcateno) 
   </select> 

  <update id="update" parameterType="ProductVO">
    UPDATE product
    SET prod_title=#{prod_title}, prod_content=#{prod_content},
         thumbs=#{thumbs}, files=#{files}, sizes=#{sizes}, prod_word=#{prod_word},
         prod_price=#{prod_price}, ip=#{ip}, prod_maker=#{prod_maker}
    WHERE productno=#{productno}
  </update>

  <delete id="delete" parameterType="int">
    DELETE FROM product
    WHERE productno=#{productno}
  </delete>
  
  <delete id="delete_product" parameterType="int">
  DELETE FROM product
  WHERE prodcateno = #{prodcateno}
  </delete>

  <!-- category 별 검색된 레코드 목록 -->
  <select id="list_by_prodcateno_search" resultType="ProductVO" parameterType="HashMap">
    SELECT productno, prodcateno, prod_title, prod_content, prod_good,
           thumbs, files, sizes, prod_cnt, prod_rdate, prod_grpno,
           prod_indent, prod_price, prod_visible, ip
    FROM product
    ORDER BY productno DESC
    <choose>
      <when test="prod_word == null or prod_word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE prodcateno=#{prodcateno}
      </when>
      <otherwise>
        WHERE prodcateno=#{prodcateno} AND prod_word LIKE '%' || #{prod_word} || '%'  
      </otherwise>
    </choose>
    ORDER BY productno DESC
  </select>
 
  <!-- 카테고리별 검색된 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as prod_cnt
    FROM product
    <choose>
      <when test="prod_word == null or prod_word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE prodcateno=#{prodcateno}
      </when>
      <otherwise>
        WHERE prodcateno=#{prodcateno} AND prod_word LIKE '%' || #{prod_word} || '%'  
      </otherwise>
    </choose>
  </select>

  <!-- category 별 검색된 레코드 목록 + 페이징 + 답변-->
  <select id="list_by_prodcateno_search_paging" resultType="ProductVO" parameterType="HashMap">
    SELECT productno, prodcateno, prod_title, prod_content, prod_price, prod_good, thumbs, files, sizes, prod_cnt,
              replyprod_cnt, prod_rdate, prod_word, prod_grpno, prod_indent, prod_viewcnt, prod_ansnum, r
    FROM(
             SELECT productno, prodcateno, prod_title, prod_content, prod_price, prod_good, thumbs, files, sizes, prod_cnt,
                       replyprod_cnt, prod_rdate, prod_word, prod_grpno, prod_indent, prod_viewcnt, prod_ansnum, rownum as r
             FROM(
                      SELECT productno, prodcateno, prod_title, prod_content, prod_price, prod_good, thumbs, files, sizes, prod_cnt,
                                replyprod_cnt, prod_rdate, prod_word, prod_grpno, prod_indent, prod_viewcnt, prod_ansnum
                      FROM product
                      <choose>
                        <when test="prod_word == null or prod_word == ''"> <!-- 검색하지 않는 경우 -->
                          WHERE prodcateno=#{prodcateno}
                        </when>
                        <otherwise>
                          WHERE prodcateno=#{prodcateno} AND prod_word LIKE '%' || #{prod_word} || '%'  
                        </otherwise>
                      </choose>
                      <choose>
                      <when test="viewno == 1">ORDER BY prod_good DESC</when>
                      <when test="viewno == 2">ORDER BY prod_viewcnt DESC</when>
                      <when test="viewno == 3">ORDER BY prod_price ASC</when>
                      <when test="viewno == 4">ORDER BY prod_price DESC</when>  
                      <when test="viewno == 5">ORDER BY prod_rdate DESC</when>
                      <when test="viewno == 6">ORDER BY prod_title ASC</when>  
                      <otherwise>ORDER BY prod_rdate ASC</otherwise>      
                      </choose>
             )
    )
    WHERE <![CDATA[r >= #{startNum} AND r <= #{endNum}]]>
    <!-- WHERE r >=1 AND r <= 3 -->
  </select>

  <!-- category 별 검색된 레코드 목록 + 페이징 + 답변-->
  <select id="list_by_prod_price_search_paging" resultType="ProductVO" parameterType="HashMap">
    SELECT productno, prodcateno, prod_title, prod_content, prod_price, prod_good, thumbs, files, sizes, prod_cnt,
              replyprod_cnt, prod_rdate, prod_word, prod_grpno, prod_indent, prod_viewcnt, prod_ansnum, r
    FROM(
             SELECT productno, prodcateno, prod_title, prod_content, prod_price, prod_good, thumbs, files, sizes, prod_cnt,
                       replyprod_cnt, prod_rdate, prod_word, prod_grpno, prod_indent, prod_viewcnt, prod_ansnum, rownum as r
             FROM(
                      SELECT productno, prodcateno, prod_title, prod_content, prod_price, prod_good, thumbs, files, sizes, prod_cnt,
                                replyprod_cnt, prod_rdate, prod_word, prod_grpno, prod_indent, prod_viewcnt, prod_ansnum
                      FROM product
                      <choose>
                        <when test="prod_word == null or prod_word == ''"> <!-- 검색하지 않는 경우 -->
                          WHERE prodcateno=#{prodcateno}
                        </when>
                        <otherwise>
                          WHERE prodcateno=#{prodcateno} AND prod_word LIKE '%' || #{prod_word} || '%'  
                        </otherwise>
                      </choose>
                      ORDER BY prod_price ASC
             )
    )
    WHERE <![CDATA[r >= #{startNum} AND r <= #{endNum}]]>
    <!-- WHERE r >=1 AND r <= 3 -->
  </select>

  <update id="increaseAnsnum" parameterType="HashMap">
    UPDATE product
    SET prod_ansnum = prod_ansnum + 1
    WHERE prod_grpno = #{prod_grpno} AND prod_ansnum > #{prod_ansnum}  
  </update>

  <!-- 답변 -->
  <insert id="reply" parameterType="ProductVO">
    INSERT INTO product(productno,
                      prodcateno, adminno, prod_title, prod_content, prod_good, thumbs,
                      files, sizes, prod_cnt, replyprod_cnt, prod_rdate, 
                      prod_word,
                      prod_grpno, 
                      prod_indent, prod_ansnum)  
    VALUES((SELECT NVL(MAX(productno), 0) + 1 as productno FROM product),
                #{prodcateno}, #{adminno}, #{prod_title}, #{prod_content}, #{prod_good}, #{thumbs}, 
                #{files}, #{sizes}, #{prod_cnt}, #{replyprod_cnt}, sysdate,
                #{prod_word},
                #{prod_grpno},
                #{prod_indent}, #{prod_ansnum})
  </insert>
  
  <update id="prod_good_up">
    UPDATE product
    SET prod_good = prod_good + 1
    WHERE productno = #{productnp}
  </update>
  
  <update id="prod_good_down">
    UPDATE product
    SET prod_good = prod_good - 1
    WHERE productno = #{productnp}
  </update>
  
    <update id="prod_viewcnt_up">
  UPDATE product
  SET prod_viewcnt = prod_viewcnt + 1
  WHERE productno=#{prodestno}
  </update>
  
  <update id="prod_viewcnt_down">
  UPDATE product
  SET prod_viewcnt = prod_viewcnt - 1
  WHERE productno=#{prodestno}
  </update>
  
  <select id="prod_prodest_cnt" resultType="int">
  SELECT COUNT(*)
    FROM prodest e, product p
    WHERE e.customerno = #{customerno} AND e.productno = p.productno 
    AND p.productno = #{productno}
  </select>
    
</mapper>







